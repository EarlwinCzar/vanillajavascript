async function asyncPool(poolLimit, array, iteratorFn) {
 const result = [];
 const executing = [];
for (const item of array) {
 const p = Promise.resolve().then(() => iteratorFn(item, array));
 result.push(p);
if (poolLimit <= array.length) {
 const e = p.then(() => executing.splice(executing.indexOf(e), 1));
 executing.push(e);
 if (executing.length >= poolLimit) {
 await Promise.race(executing);
 }
 }
 }
return Promise.all(result);
}
// Example
async function uploadFile(file) {
 // File upload logic
}
async function limitedFileUpload(files) {
 return asyncPool(3, files, uploadFile);
}
